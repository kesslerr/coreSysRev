"0",""
"0",""
"0","#' Contrast coding for HLM"
"0","#'"
"0","#' We use contrast coding to get a useful, nice-to-interpret intercept in our model. "
"0","#' We want the intercept to be equivalent to the ""mean of all subjects from all studies""."
"0","#' With usual coding of the factor ""Study"", the overall intercept of the model would be equvalent to the mean of study #1."
"0","#' does a keyword search over the headers to find those column headers that"
"0","#' match a particular keyword, e.g., mean, median, etc."
"0","#' Therefore, we create artificial variables according to: https://pagepiccinini.com/2016/03/18/contrast-coding-with-three-level-variables/"
"0","#' For two variables, contrast coding is straightforward."
"0","#' For three variables, keep in mind, that interpretation of some other model parameters may change (c.f. website above)."
"0","#' "
"0","#' @param df a data frame object."
"0","#' @param colName The name of the column (char) that shall be contrast coded."
"0","#' @param numLevels Number of levels for contast coding (int). Only 2, 3 or 4 possible. Defaults to 2."
"0","#' @param interceptCorrect "
"0","#'"
"0","#' @return A data frame object containing the dummy coded variable."
"0","#' @export"
"0","contrastCoding <- function(df, colName, numLevels = 2, interceptCorrect = TRUE){"
"0","  require(dplyr)"
"0","  # change the colname for convenience"
"0","  names(df)[names(df) == colName] <- ""V1"""
"0","  "
"0","  w1A <- -0.5  #nb / nab # weight of contrast 1, group A"
"0","  w1B <-  0.5  #na / nab"
"0","  "
"0","  # in any case, calculate A vs B"
"0","  df = df %>%"
"0","    mutate(contrast_AvB = ifelse(V1 == 0, w1A, ifelse(V1 == 1, w1B, 0)))"
"0","  # if only 2 levels, calculate A vs C"
"0","  if ( numLevels == 2 ){"
"0","    df = df %>% "
"0","      mutate(contrast_AvC = ifelse(V1 == 0, -0.5, ifelse(V1 == 1, 0.5, 0))) # ??? wrong ?"
"0","  "
"0","    # if 3 levels"
"0","  } else if (numLevels == 3){"
"0","    w2A <- -0.25 #nb / nabcc"
"0","    w2B <- -0.25 #na / nabcc"
"0","    w2C <-  0.5  #2 * nc / nabcc"
"0","    # if the intercept is supposed to be meaningful"
"0","    if ( interceptCorrect == TRUE ){"
"0","      df = df %>%"
"0","        mutate(contrast_ABvC = ifelse(V1 == 2, w2C, ifelse(V1 == 0, w2A, w2B)))"
"0","    } else{"
"0","      # if the intercept is not supposed to be meaningful, but the differences between studies"
"0","      df = df %>%"
"0","        mutate(contrast_ABvC = ifelse(V1 == 2, 0.5, -0.5)) # do not use this version already"
"0","    }"
"0","  "
"0","    # if 4 levels"
"0","  } else if (numLevels == 4){"
"0","    # von v3"
"0","    w2A <- -0.25 #nb / nabcc"
"0","    w2B <- -0.25 #na / nabcc"
"0","    w2C <-  0.5  #2 * nc / nabcc"
"0","    # if the intercept is supposed to be meaningful"
"0","    if ( interceptCorrect == TRUE ){"
"0","      df = df %>%"
"0","        mutate(contrast_ABvC = ifelse(V1 == 2, w2C, ifelse(V1 == 0, w2A, w2B)))"
"0","    } else{"
"0","      # if the intercept is not supposed to be meaningful, but the differences between studies"
"0","      df = df %>%"
"0","        mutate(contrast_ABvC = ifelse(V1 == 2, 0.5, -0.5)) # do not use this version already"
"0","    }"
"0",""
"0","    w3A <- -0.5/3 #nb / nabcddd"
"0","    w3B <- -0.5/3 #na / nabcddd"
"0","    w3C <- -0.5/3 #"
"0","    w3D <-  0.5   #3 * nd / nabcddd"
"0","    # if the intercept is supposed to be meaningful"
"0","    if ( interceptCorrect == TRUE ){"
"0","      df = df %>%"
"0","        mutate(contrast_ABCvD = ifelse(V1 == 3, w3D, ifelse(V1 == 2, w3C, ifelse(V1 == 1, w3B, w3A))))"
"0","    } else{"
"0","      # if the intercept is not supposed to be meaningful, but the differences between studies"
"0","      df = df %>%"
"0","        mutate(contrast_ABvC = ifelse(V1 == 2, 0.5, -0.5)) # not yet finished this version !!"
"0","    }"
"0","  }"
"0","  "
"0","  # change the colname back to its original"
"0","  names(df)[names(df) == ""V1""] <- colName"
"0","  "
"0","  return(df)"
"0","}"
"0",""
"0",""
"0","# for Hormone contrast"
"0",""
"0","#' Contrast coding for HLM"
"0","#'"
"0","#' We use contrast coding to get a useful, nice-to-interpret intercept in our model. "
"0","#' We want the intercept to be equivalent to the ""mean of all subjects from all studies""."
"0","#' With usual coding of the factor ""Study"", the overall intercept of the model would be equvalent to the mean of study #1."
"0","#' does a keyword search over the headers to find those column headers that"
"0","#' match a particular keyword, e.g., mean, median, etc."
"0","#' Therefore, we create artificial variables according to: https://pagepiccinini.com/2016/03/18/contrast-coding-with-three-level-variables/"
"0","#' For two variables, contrast coding is straightforward."
"0","#' For three variables, keep in mind, that interpretation of some other model parameters may change (c.f. website above)."
"0","#' "
"0","#' @param df a data frame object."
"0","#' @param colName The name of the column (char) that shall be contrast coded."
"0","#' @param numLevels Number of levels for contast coding (int). Only 2, 3 or 4 possible. Defaults to 2."
"0","#' @param interceptCorrect "
"0","#'"
"0","#' @return A data frame object containing the dummy coded variable."
"0","#' @export"
"0","contrastCodingHormone <- function(df, colName, numLevels = 2, interceptCorrect = TRUE){"
"0","  require(dplyr)"
"0","  # change the colname for convenience"
"0","  names(df)[names(df) == colName] <- ""V1"""
"0","  "
"0","  w1A <- -0.5  #nb / nab # weight of contrast 1, group A"
"0","  w1B <-  0.5  #na / nab"
"0","  "
"0","  # in any case, calculate A vs B"
"0","  df = df %>%"
"0","    mutate(contrast_MvP = ifelse(Study == 2, ifelse(V1 == 0, w1A, w1B), 0))"
"0",""
"0","  # change the colname back to its original"
"0","  names(df)[names(df) == ""V1""] <- colName"
"0","  "
"0","  return(df)"
"0","}"
"0",""
"0",""
"0",""
"0",""
