"0","# table for results"
"0","facesIntercept <- matrix(NA, 3, 3)"
"0","facesPVal      <- matrix(NA, 3, 3)"
"0","dfResults <- data.frame(Source=numeric(0), Target=numeric(0), Matrix=character(0), Type=character(0), Value=numeric(0), stringsAsFactors=FALSE)"
"0","bigDF <- data.frame(matrix(ncol=5,nrow=0, dimnames=list(NULL, c(""Subject"", ""Parameter"", ""Study"", ""Hormone"", ""Connection""))))"
"0",""
"0",""
"0","for ( target in 1:3 ){      # target region"
"0","  for ( source in 1:3 ){    # source region"
"0","    if (source == target){"
"0","      next # skip this iteration if it is a self connection"
"0","    } else {"
"0","      "
"0","      "
"0","      Subject <- c(subNumEFP, subNumFEM)"
"0","      Study <- c(rep(0,23),rep(1,27))"
"0","      Hormone <- c(rep(0,23+27))"
"0","      # load parameters in df"
"0","      Parameter <-      c(dfEFP$mEpsBEmotions[target,source,], # DCM parameters"
"0","                          dfFEM$mEpsBEmotions[target,source,])"
"0","      dfFaces <- data.frame(Subject, Parameter, Study, Hormone)"
"0","      dfFaces$Subject <- as.factor(dfFaces$Subject)"
"0","      dfFaces$Study   <- as.factor(dfFaces$Study)"
"0","      dfFaces$Hormone <- as.factor(dfFaces$Hormone)"
"0",""
"0","      # create contrasts"
"0","      dfFaces <- contrastCoding(df = dfFaces, colName = ""Study"", numLevels = 2, interceptCorrect = TRUE)"
"0","      "
"0","      ## create hormone contrast"
"0","      #dfFaces <- contrastCodingHormone(df = dfFaces, colName = ""Hormone"", numLevels = 2, interceptCorrect = TRUE)"
"0","      "
"0","      # estimate model"
"0","      m1 <- lme(Parameter ~ 1 + contrast_AvB, random = ~1|Subject, data=dfFaces)"
"0",""
"0","      # extract results"
"0","      intercept = m1$coefficients$fixed[1]"
"0","      p = summary(m1)$tTable[,""p-value""][1]"
"0","      facesIntercept[target,source] <- intercept"
"0","      facesPVal[target,source]      <- p"
"0","      dfResults[nrow(dfResults) + 1,] = list(source,target, ""faces"", ""intercept"", intercept )"
"0","      dfResults[nrow(dfResults) + 1,] = list(source,target, ""faces"", ""p"", p )"
"0","      if (p <= thres){"
"0","        dfResults[nrow(dfResults) + 1,] = list(source,target, ""faces"", ""intercept_sig"",paste(round(intercept,2),""*"") )"
"0","      } else {"
"0","        dfResults[nrow(dfResults) + 1,] = list(source,target, ""faces"", ""intercept_sig"", paste(round(intercept,2),"""") )"
"0","      }"
"0","      "
"0","      # create a name for the connection"
"0","      conName <- paste(regionNames[source],"">"",regionNames[target])"
"0","      dfFaces$Connection <- conName "
"0","      bigDF <- rbind(bigDF,"
"0","                     subset(dfFaces, select = c(""Subject"",""Parameter"",""Study"",""Hormone"", ""Connection"")))"
"0","    }"
"0","  }"
"0","} "
"0","print(""Intercept ="")"
"1","[1]"
"1"," ""Intercept ="""
"1","
"
"0","facesIntercept"
"1","    "
"1","      [,1]"
"1","       [,2]"
"1","        [,3]"
"1","
[1,]"
"1","        NA"
"1","  0.1192941"
"1","  0.01216702"
"1","
[2,]"
"1"," 0.1397702"
"1","         NA"
"1"," -0.24463616"
"1","
[3,]"
"1"," 0.3500649"
"1"," -0.1941823"
"1","          NA"
"1","
"
"0","print(""p ="")"
"1","[1]"
"1"," ""p ="""
"1","
"
"0","facesPVal"
"1","    "
"1","         [,1]"
"1","         [,2]"
"1","       [,3]"
"1","
[1,]"
"1","           NA"
"1"," 0.0287067067"
"1"," 0.91011240"
"1","
[2,]"
"1"," 2.181722e-02"
"1","           NA"
"1"," 0.01960512"
"1","
[3,]"
"1"," 7.718684e-06"
"1"," 0.0004635229"
"1","         NA"
"1","
"
