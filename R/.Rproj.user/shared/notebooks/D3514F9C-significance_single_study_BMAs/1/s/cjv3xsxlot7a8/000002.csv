"0","```r
tt <- apply(dfFEM$mEpsBFaces, c(1,2), t.test) # t.test into 3rd dimension

mean_val <- matrix(nrow = 3, ncol=3)
p_val <- matrix(nrow = 3, ncol=3)
dfLong <- data.frame(Source=numeric(0), Target=numeric(0), Type=character(0), Value=numeric(0), stringsAsFactors=FALSE)


for (y in 1 : dim(tt)[1]){
  for (x in 1: dim(tt)[2]){
    if (y==x){next} # ommit self connections
    mean_val[y,x] <- tt[[y,x]]$estimate
    p_val[y,x] <- tt[[y,x]]$p.value
    
    # put in long DF for plotting
    dfLong[nrow(dfLong) + 1,] = list(x,y, \"intercept\", mean_val[y,x] )
    dfLong[nrow(dfLong) + 1,] = list(x,y, \"p\", p_val[y,x] )
    if (p_val[y,x] <= thres){
      dfLong[nrow(dfLong) + 1,] = list(x,y, \"intercept_sig\",paste(round(mean_val[y,x],2),\"*\") )
    } else {
      dfLong[nrow(dfLong) + 1,] = list(x,y, \"intercept_sig\", paste(round(mean_val[y,x],2),\"\") )
    }
  }
}

print(mean_val)
```"
"1","          [,1]       [,2]       [,3]
[1,]        NA -1.0555028  0.3371992
[2,] 0.7693085         NA -0.1633979
[3,] 1.1244644 -0.7369334         NA
"
"0","```r
print(p_val)
```"
"1","             [,1]         [,2]      [,3]
[1,]           NA 1.064941e-05 0.1207469
[2,] 9.305867e-07           NA 0.4289006
[3,] 1.006239e-06 5.257590e-05        NA
"
"0","```r
p22 <- qplot(x=Source , y=Target , data=subset(dfLong, Type == \"intercept\"), fill=as.numeric(Value), geom=\"tile\") +
  geom_text(data=subset(dfLong, Type == \"intercept_sig\"), aes(label = Value, size = 35)) +
  #scale_fill_gradientn(colors = c(\"blue\",\"white\",\"red\"), values = scales::rescale(c(-1.5, -0.5, 0, 0.5, 1.5))) +
  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\", midpoint=0, limits=colorRange) +
  scale_x_discrete(limits=c(\"OFA\",\"FFA\",\"STS\")) +
  scale_y_discrete(limits=c(\"OFA\",\"FFA\",\"STS\")) +
  myTheme +
  labs(x = \"source region\", y = \"target region\") + #,  tag = \"B\"
  coord_equal() +
  facet_grid()
p22

```"
